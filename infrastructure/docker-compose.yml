services:
  postgres:
    image: postgres:15
    container_name: keycloak_db
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloakpass
      POSTGRES_DB: keycloak
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - keycloak_network

  postgres_main:
    image: postgres:15
    container_name: postgres_main
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: lgm8_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_main_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - keycloak_network

  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: keycloak
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloakpass
      KC_PROXY: edge
      KEYCLOAK_FRONTEND_URL: "http://localhost/auth/"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - keycloak_network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - keycloak_network

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ../api-gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      keycloak:
        condition: service_started
    restart: unless-stopped
    networks:
      - keycloak_network

  lgm8-auth-service:
    build:
      context: ../
      dockerfile: microservices/lgm8-auth-service/dockerfile
    container_name: lgm8-auth-service
    environment:
      - GIN_MODE=debug
      - GIN_TRUSTED_PROXIES=nginx,keycloak
      - APP_ENV=dev
    secrets:
      - user_verification_secret_key
    ports:
      - "8081:8081"
    depends_on:
      keycloak:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - keycloak_network

  lgm8-measurements-service:
    build:
      context: ../
      dockerfile: microservices/lgm8-measurements-service/dockerfile
    container_name: lgm8-measurements-service
    environment:
      - GIN_MODE=debug
      - GIN_TRUSTED_PROXIES=nginx,keycloak
      - APP_ENV=dev
    depends_on:
      postgres_main:
        condition: service_healthy
    ports:
      - "8082:8082"
    networks:
      - keycloak_network

  lgm8-notification-service:
    build:
      context: ../
      dockerfile: microservices/lgm8-notification-service/dockerfile
    container_name: lgm8-notification-service
    environment:
      - APP_ENV=dev
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - keycloak_network

networks:
  keycloak_network:
    driver: bridge

volumes:
  postgres_data:
  postgres_main_data:
  rabbitmq_data:

secrets:
  user_verification_secret_key:
    file: ./secrets/user_verification_secret
